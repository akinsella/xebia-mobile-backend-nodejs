// Generated by CoffeeScript 1.6.3
var ApnAgent, Device, Notification, agent, config, pushNotification, pushNotificationToAll, pushToAll, utils;

config = require('../conf/config');

utils = require('../lib/utils');

Device = require('../model/device');

Notification = require('../model/notification');

ApnAgent = require('apnagent');

console.log("Dirname: " + __dirname);

agent = new ApnAgent.Agent();

agent.set('cert file', "" + __dirname + "/../certs/xebia-apns-cert.pem").set('key file', "" + __dirname + "/../certs/xebia-apns-key.pem").enable('sandbox').set('expires', '1d').set('reconnect delay', '1s').set('cache ttl', '30m');

agent.on('message:error', function(err, msg) {
  return console.log("Got some error: " + err.message + " - Message: " + msg);
});

agent.connect(function(err) {
  if (err) {
    throw err;
  } else {
    return console.log("Apn agent running ");
  }
});

pushToAll = function(message) {
  return Device.find({}, function(err, devices) {
    if (err) {
      return cb(err);
    } else {
      devices.each(function(device) {
        return pushNotification(device.token, message);
      });
      return cb();
    }
  });
};

pushNotificationToAll = function(notificationId, cb) {
  return Notification.findOne({
    id: notificationId
  }, function(err, notification) {
    if (err) {
      return cb(err);
    } else {
      return Device.find({}, function(err, devices) {
        if (err) {
          return cb(err);
        } else {
          devices.forEach(function(device) {
            return pushNotification(device.token, notification.message);
          });
          return cb();
        }
      });
    }
  });
};

pushNotification = function(token, message) {
  console.log("Try to log Message: '" + message + "' to device with token: '" + token + "'");
  return agent.createMessage().device(token).alert(message).send(function(err) {
    if (err) {
      return console.log("Count not send message: '" + message + "' for device with token: " + token);
    } else {
      return console.log("Message sent");
    }
  });
};

module.exports = {
  pushToAll: pushToAll,
  pushNotificationToAll: pushNotificationToAll
};

/*
//@ sourceMappingURL=apns.map
*/
