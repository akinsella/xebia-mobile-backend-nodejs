// Generated by CoffeeScript 1.6.3
var Event, config, event, fs, list, utils, _;

utils = require('../lib/utils');

_ = require('underscore')._;

fs = require('fs');

config = require('../conf/config');

Event = require('../model/event');

list = function(req, res) {
  if (config.offlineMode) {
    res.charset = 'UTF-8';
    return res.send(JSON.parse(fs.readFileSync("" + __dirname + "/../data/eventbrite_event.json", "utf-8")));
  } else {
    return Event.find({}).sort("-startDate").limit(50).exec(function(err, events) {
      if (err) {
        return res.json(500, {
          message: "Server error: " + err.message
        });
      } else if (!event) {
        return res.json(404, "Not Found");
      } else {
        events = events.map(function(event) {
          event = event.toObject();
          delete event._id;
          delete event.__v;
          return event;
        });
        return res.json(events);
      }
    });
  }
};

event = function(req, res) {
  var eventId;
  eventId = req.params.id;
  return Event.findOne({
    id: eventId
  }, function(err, event) {
    if (err) {
      return res.json(500, {
        message: "Server error: " + err.message
      });
    } else if (!event) {
      return res.json(404, "Not Found");
    } else {
      event = event.toObject();
      delete event._id;
      delete event.__v;
      return res.json(event);
    }
  });
};

module.exports = {
  list: list,
  event: event
};

/*
//@ sourceMappingURL=eventbrite.map
*/
