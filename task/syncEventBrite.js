// Generated by CoffeeScript 1.6.3
var News, async, config, db, moment, processEventBriteEntries, request, synchronize, synchronizeEventNews, utils, _;

utils = require('../lib/utils');

async = require('async');

_ = require('underscore')._;

News = require("../model/news");

db = require("../db");

moment = require("moment");

config = require("../conf/config");

request = require("request");

synchronize = function() {
  var callback;
  callback = function(err, news) {
    if (err) {
      return console.log("EventBrite Synchronization ended with error: " + err.message + " - Error: " + err);
    } else {
      return console.log("EventBrite Synchronization ended with success ! (" + news.length + " events synchronized)");
    }
  };
  if (config.feature.stopWatch) {
    callback = utils.stopWatchCallbak(callback);
  }
  console.log("Start synchronizing EventBrite entries ...");
  return processEventBriteEntries(callback);
};

processEventBriteEntries = function(callback) {
  var apiKey;
  apiKey = process.env["EVENTBRITE_AUTH_KEY"];
  "https://www.eventbrite.com/json/organizer_list_events?app_key=" + apiKey + "&id=1627902102";
  return request.get({
    url: "https://www.eventbrite.com/json/organizer_list_events?app_key=" + apiKey + "&id=1627902102",
    json: true
  }, function(error, data, response) {
    data = _(data.events).pluck("event");
    data = _(data).sortBy(function(event) {
      return event.start_date;
    });
    data = _(data).filter(function(event) {
      return event.status === "Live" || event.status === "Completed";
    });
    data = _(data).reverse();
    _(data).each(function(event) {
      return event;
    });
    return async.map(response.posts, synchronizeEventNews, callback);
  });
};

synchronizeEventNews = function(event, callback) {
  return News.findOne({
    type: 'eventbrite',
    typeId: event.id
  }, function(err, news) {
    var newsEntry;
    if (err) {
      return callback(err);
    } else if (!news) {
      event.description_plain_text = event.description;
      if (event.description_plain_text) {
        event.description_plain_text = event.description_plain_text.replace(/<\/?([a-z][a-z0-9]*)\b[^>]*>?/gi, '');
        event.description_plain_text = event.description_plain_text.replace(/<!--(.*?)-->/g, '');
        event.description_plain_text = event.description_plain_text.replace(/\n\s*\n/g, '\n');
      }
      newsEntry = new News({
        content: event.description_plain_text,
        draft: false,
        imageUrl: "",
        publicationDate: event.created,
        targetUrl: event.url,
        title: event.title,
        author: event.organizer.name,
        type: "eventbrite",
        typeId: event.id
      });
      return newsEntry.save(function(err) {
        return callback(err, newsEntry);
      });
    } else {
      return callback(err, void 0);
    }
  });
};

module.exports = {
  synchronize: synchronize
};

/*
//@ sourceMappingURL=syncEventBrite.map
*/
