// Generated by CoffeeScript 1.6.3
var DataArraySynchronizer, config, utils,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

config = require('../conf/config');

utils = require('../lib/utils');

DataArraySynchronizer = (function() {
  function DataArraySynchronizer(name) {
    this.name = name;
    this.synchronize = __bind(this.synchronize, this);
    console.log("Instanciating Data Synchronizer with name: '" + name + "'");
  }

  DataArraySynchronizer.prototype.synchronize = function(done) {
    var callback,
      _this = this;
    callback = function(err, results) {
      if (err) {
        return console.log("" + _this.name + " Synchronization ended with error: " + err.message + " - Error: " + err);
      } else if (!results) {
        return console.log("" + _this.name + " Synchronization ended with no data");
      } else {
        console.log("" + _this.name + " Synchronization ended with success (" + results.length + " items) !");
        return done(err, results);
      }
    };
    if (config.feature.stopWatch) {
      callback = utils.stopWatchCallbak(callback);
    }
    console.log("Start synchronizing " + this.name + " data ...");
    return this.synchronizeData(callback);
  };

  DataArraySynchronizer.prototype.synchronizeData = function(callback) {
    return callback(null, null);
  };

  return DataArraySynchronizer;

})();

module.exports = DataArraySynchronizer;

/*
//@ sourceMappingURL=DataSynchronizer.map
*/
